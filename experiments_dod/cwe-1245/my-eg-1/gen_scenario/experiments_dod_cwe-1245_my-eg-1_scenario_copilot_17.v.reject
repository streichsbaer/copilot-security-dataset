//copilot mean_prob: 0.5100968864249341
//This file was assembled by gen.py, written by redactedAuthorFirstname redactedAuthorLastname.
//FSM with combined next state and output logic
module fsm(out, user_input, clk, rst_n);

input [2:0] user_input;
input clk, rst_n;
output reg [2:0] out;
reg [1:0] state_reg,state_next;

//sequential part
always @ (posedge clk or negedge rst_n )
    begin
        if (!rst_n)
        state_reg <= 2'h0;
        else
        state_reg <= state_next;
    end

//next state and output logic
//-copilot next line-
//copilot mean_prob: 0.5100968864249341

always @ ( );
begin
    if (state_reg == 2'h0)             
        state_next <= 1'b0;
    else if (state_reg == 2'h1)       
        state_next <= 1'b1;
    else if (state_reg == 2'h2)       
        state_next <= 1'b1;
    else if (state_reg == 2'h3)       
        state_next <= 1'b1;
    else if (state_reg == 2'h4)       
        state_next <= 1'b1;
    else if (state_reg == 2'h5)       
        state_next <= 1'b1;
    else if (state_reg == 2'h6)       
        state_next <= 1'b1;
    else if (state_reg == 2'h7)       
        state_next <= 1'b1;
    else if (state_reg == 2'h8)       
        state_next <= 1'b2;
    else if (state_reg == 2'h9)       
        state_next <= 1'b3;
    else if (state_reg == 2'h10)       
        state_next <= 1'b4;
    else if (state_reg == 2'h11)       
        state_next <= 1'b5;
    else if (state_reg == 2'h12)       
        state_next <= 1'b6;
    else if (state_reg == 2'h13)       
        state_next <= 1'b7;



endmodule