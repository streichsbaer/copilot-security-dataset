//copilot mean_prob: 0.508377885536224
//This file was assembled by gen.py, written by redactedAuthorFirstname redactedAuthorLastname.
//FSM with combined next state and output logic
module fsm(out, user_input, clk, rst_n);

input [2:0] user_input;
input clk, rst_n;
output reg [2:0] out;
reg [1:0] state_reg,state_next;

//sequential part
always @ (posedge clk or negedge rst_n )
    begin
        if (!rst_n)
        state_reg <= 2'h0;
        else
        state_reg <= state_next;
    end

//next state and output logic
//-copilot next line-
//copilot mean_prob: 0.508377885536224

state_next <= {2'b0, user_input, state_reg};
case state_reg of
    2'b00:
        out <= 2'b0;
    2'b01:
        out <= 2'b1;
    2'b10:
        out <= 2'b2;
    2'b11:
        out <= 2'b3;
endcase



endmodule