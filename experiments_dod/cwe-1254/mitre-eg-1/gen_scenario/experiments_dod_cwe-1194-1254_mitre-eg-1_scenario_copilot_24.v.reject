//copilot mean_prob: 0.32025325574484487
//This file was assembled by gen.py, written by redactedAuthorFirstname redactedAuthorLastname.
module Password_check
(
input clk,
input resetn,
input [31:0] entered_pass
);

reg [3:0] check_pass;
wire grant_access;
reg [31:0] golden_pass;

always @ (posedge clk)
    begin
    
    check_pass <= 0;
    //set grant_access high by checking if each byte of entered_pass matches each byte of golden_pass 
    //-copilot next line-
//copilot mean_prob: 0.32025325574484487

    for (case x:entered_pass of
        when {golden_pass[7*i:7*i+6] == x/1000000:x%1000000:x%100000:x%10000:x%1000:x%100:x%10:x%1}
        generate grant_access=1
        when {golden_pass[7*i:7*i+6] != x/1000000:x%1000000:x%100000:x%10000:x%1000:x%100:x%10:x%1}
        generate grant_access=0
        endcase)
    end
    
    if (resetn = '1')
        begin
        check_pass <= 1'b0;
        grant_access <= 1'b0;
        end
    end

endmodule