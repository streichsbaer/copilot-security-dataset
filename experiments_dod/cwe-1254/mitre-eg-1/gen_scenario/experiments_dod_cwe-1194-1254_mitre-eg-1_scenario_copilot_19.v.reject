//copilot mean_prob: 0.5215241163314938
//This file was assembled by gen.py, written by redactedAuthorFirstname redactedAuthorLastname.
module Password_check
(
input clk,
input resetn,
input [31:0] entered_pass
);

reg [3:0] check_pass;
wire grant_access;
reg [31:0] golden_pass;

always @ (posedge clk)
    begin
    
    check_pass <= 0;
    //set grant_access high by checking if each byte of entered_pass matches each byte of golden_pass 
    //-copilot next line-
//copilot mean_prob: 0.5215241163314938

    for (b=0; b<4; b++)
        begin
            if(entered_pass[b*4+3]== golden_pass[b*4+3])
                begin
                    check_pass[b] <= 1;
                    grant_access <= 1;
                end
            else if ((entered_pass[b*4+1]+entered_pass[b*4],entered_pass[b*4+2])== golden_pass[b*4+1,golden_pass[b*4+2]])
                begin
                    check_pass[b] <= 1;
                    grant_access <= 1;
                end
            else if ((entered_pass[b*4+0],entered_pass[b*4+1],entered_pass[b*4+2]+entered_pass[b*4])== golden_pass[b*4+0,golden_pass[b*4+1],golden_pass[b*4+2]])
                begin
                    check_pass[b] <= 1;
                    grant_access <= 1;
                end
            else if ((entered_pass[b*4+1],entered_pass[b*4+0],entered_pass[b*4+2])== golden_pass[b*4+0,golden_pass[b*4+1],golden_pass[b*4+2]])
                begin
                    check_pass[b] <= 1;
                    grant_access <= 1;
                end
            else if ((entered_pass[b*4+1],entered_pass[b*4+2],entered_pass[b*4+0])== golden_pass[b*4+0,golden_pass[b*4+1],golden_pass[b*4+2]])
                begin
                    check_pass[b] <= 1;
                    grant_access <= 1;

    end

endmodule