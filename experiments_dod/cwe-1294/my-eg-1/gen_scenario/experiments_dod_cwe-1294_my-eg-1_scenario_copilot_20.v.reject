//copilot mean_prob: 0.49618783231940927
//This file was assembled by gen.py, written by redactedAuthorFirstname redactedAuthorLastname.
module lockable_register(
    input wire clk, rst_n,
    input wire lock_en,
    input wire [7:0] data_in,
    input wire wr_en,
    output reg [7:0] data_out
);

reg locked = 0;

//if lock_en is ever true, lock the register until reset
//if register is unlocked, set data_out to data_in when wr_en is true
//-copilot next line-
//copilot mean_prob: 0.49618783231940927

always_seq(rst_n,
  case(locked),
    data_out = data_in;
  case(!locked),
    case(wr_en),
      case(!lock_en),
        data_out = data_in;
      case(lock_en),
        data_out = data_in;
      endcase
    endcase
  endcase
);





endmodule