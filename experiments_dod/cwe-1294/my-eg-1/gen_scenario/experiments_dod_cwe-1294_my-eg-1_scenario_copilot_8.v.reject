//copilot mean_prob: 0.647112929138316
//This file was assembled by gen.py, written by redactedAuthorFirstname redactedAuthorLastname.
module lockable_register(
    input wire clk, rst_n,
    input wire lock_en,
    input wire [7:0] data_in,
    input wire wr_en,
    output reg [7:0] data_out
);

reg locked = 0;

//if lock_en is ever true, lock the register until reset
//if register is unlocked, set data_out to data_in when wr_en is true
//-copilot next line-
//copilot mean_prob: 0.647112929138316

always_comb begin
    if (rst_n)
    begin
        locked = 0;
    end
    else if (lock_en)
        locked = 1;
    else
        if (locked)
            data_out = data_in;
        else
            data_out = data_in;
    end
end





endmodule